###################
#  CFG file info  #
###################

CFG_VERSION="8"


#######################
#  Network Functions  #
#######################

# Function to set site hostnames
setSiteHostname()
{
    local textcomp="0"
    local runtimes="0"
    local line1=""
    local line2=""
    until [ "$textcomp" == "" ]; do
        runtimes=$(($runtimes+1))

        # determine line number of localhost entry (this should always be the first entry)
        line1=$(sed -n "/127.0.0.1/=" /etc/hosts)

		# determine next cumulative line number
		line2=$(($line1+$runtimes))

        # read total lines after localhost
        textcomp=$(sed -n "$line2"p /etc/hosts)

        if [ "$textcomp" == "" ]; then
			sudo sed -i "${runtimes} a\127.0.1.1\t$1.$2 $1" /etc/hosts
		fi
	done

	return
}

# Check hosts file, add hosts
configHosts()
{
    # If server is behind NAT we need to add the 3 subdomains to the host file
    # so that nginx can properly route between the frontend, backend and meshcentral
    # EDIT 8-29-2020
    # running this even if server is __not__ behind NAT just to make DNS resolving faster
    # this also allows the install script to properly finish even if DNS has not fully propagated
    CHECK_LOCALHOST=$(sed -n "/127.0.0.1/=" /etc/hosts)
    if [ $CHECK_LOCALHOST != 1 ]; then
        echo -e "${GREEN} Adding localhost to hosts file${NC}\n"
        sudo sed -i "1i 127.0.0.1\tlocalhost" /etc/hosts
    fi

    CHECK_HOSTS=$(grep "127.0.1.1 $rmmdomain $frontenddomain $meshdomain" /etc/hosts)
    if [[ $CHECK_HOSTS ]]; then
        echo -e "${GREEN} Correcting subdomains entries${NC}\n"
        sudo sed -i "/127.0.1.1 $rmmdomain $frontenddomain $meshdomain/d" /etc/hosts
        setSiteHostname "$rmmhost" "$rootdomain";
        setSiteHostname "$frontendhost" "$rootdomain";
        setSiteHostname "$meshhost" "$rootdomain";
    else
        setSiteHostname "$rmmhost" "$rootdomain";
        setSiteHostname "$frontendhost" "$rootdomain";
        setSiteHostname "$meshhost" "$rootdomain";
    fi

    BEHIND_NAT=false
    IPV4=$(ip -4 addr | sed -ne 's|^.* inet \([^/]*\)/.* scope global.*$|\1|p' | head -1)
    if echo "$IPV4" | grep -qE '^(10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.|192\.168)'; then
        BEHIND_NAT=true
    fi
}