#!/usr/bin/env bash

if [ $EUID -ne 0 ]; then
  echo "ERROR: Must be run as root"
  exit 1
fi

while getopts a:d:t:c:s:n:p:debug: flag
do
    case "${flag}" in
        a) agentDownload=${OPTARG};;
        d) domain=${OPTARG};;
        t) token=${OPTARG};;
        c) clientID=${OPTARG};;
        s) siteID=${OPTARG};;
        n) agentType=${OPTARG};;
        p) proxy=${OPTARG};;
        debug) debug=1;;
    esac
done

if test -z "$agentDownload" || test -z "$domain" || test -z "$token" || test -z "$clientID" || test -z "$siteID" || test -z "$agentType"
then
    printf '%s\n'\
            "Usage: agent_linux.sh"\
            "-a \"http://linuxagentdownload\""\
            "-d base domain eg) mycompany.com"\
            "-t \"token generated by trmm\""\
            "-c client id"\
            "-s site id"\
            "-n server or workstation"\
            "-p proxy (optional)"\
            "-debug log installation"
else
    meshDL="http://mesh.${domain}/meshagents?id=6"
    apiURL="http://api.${domain}"

    agentBinPath='/usr/local/bin'
    binName='tacticalagent'
    agentBin="${agentBinPath}/${binName}"
    agentConf='/etc/tacticalagent'
    agentSvcName='tacticalagent.service'
    agentSysD="/Library/LaunchDaemons/com.tactical.plist"
    meshDir='/opt/tacticalmesh'
    meshSystemBin="${meshDir}/meshagent"
    meshSvcName='meshagent.service'
    meshSysD="/lib/systemd/system/${meshSvcName}"

    echo "Downloading tactical agent..."
    curl "${agentDownload}" -o ${agentBin} -s
    chmod +x ${agentBin}

    if [ ! -d "${agentBinPath}" ]; then
        echo "Creating ${agentBinPath}"
        mkdir -p ${agentBinPath}
    fi

    if [[ "${debug}" -eq 1 ]]; then
        INSTALL_CMD="${agentBin} -m install -api ${apiURL} -client-id ${clientID} -site-id ${siteID} -agent-type ${agentType} -auth ${token} -log debug"
    else
        INSTALL_CMD="${agentBin} -m install -api ${apiURL} -client-id ${clientID} -site-id ${siteID} -agent-type ${agentType} -auth ${token}"
    fi

    eval ${INSTALL_CMD}

    chmod +x ${agentBin}

    tacticalsvc="$(cat << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"
    "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>Label</key>
        <string>com.tactical.plist</string>
        <key>ServiceDescription</key>
        <string>Tactical RMM Service</string>
        <key>ProgramArguments</key>
        <array>             
            <string>${agentBin}</string>
            <string>-m</string>
            <string>svc</string>
        </array>
        <key>RunAtLoad</key>
        <true/>
        <key>KeepAlive</key>
        <true/>
    </dict>
</plist>
EOF
)"
    echo "${tacticalsvc}" | tee ${agentSysD} > /dev/null

    launchctl load ${agentSysD}

    launchctl start com.tactical.plist
fi
