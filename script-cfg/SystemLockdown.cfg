# Function to harden system against intruders
hardenOperatingSystem()
{
	echo " "
	echo "############ Hardening system against intruders ############"
	echo "############################################################"

	# prevent tmpfs exploits
	sudo chmod 777 /etc/fstab
	sudo printf "\ntmpfs     /run/shm     tmpfs     defaults,noexec,nosuid     0     0" >> /etc/fstab
	sudo chmod 644 /etc/fstab
	
    # enable general good security settings for ip traffic
	sudo chmod 777 /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# IP Spoofing protection" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.all.rp_filter = 1" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.default.rp_filter = 1" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# Ignore ICMP broadcast requests" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.icmp_echo_ignore_broadcasts = 1" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# Disable source packet routing" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.all.accept_source_route = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv6.conf.all.accept_source_route = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.default.accept_source_route = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv6.conf.default.accept_source_route = 0" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# Ignore send redirects" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.all.send_redirects = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.default.send_redirects = 0" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# Block SYN attacks" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.tcp_syncookies = 1" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.tcp_max_syn_backlog = 2048" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.tcp_synack_retries = 2" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.tcp_syn_retries = 5" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# Log Martians" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.all.log_martians = 1" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.icmp_ignore_bogus_error_responses = 1" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo printf "\n# Ignore ICMP redirects" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.all.accept_redirects = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv6.conf.all.accept_redirects = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv4.conf.default.accept_redirects = 0" >> /etc/sysctl.conf
	sudo printf "\nnet.ipv6.conf.default.accept_redirects = 0" >> /etc/sysctl.conf
	sudo printf "\n" >> /etc/sysctl.conf
	sudo chmod 644 /etc/sysctl.conf
	sudo sysctl -p

	# check dns first, use hosts as a backup option, prevent spoofing
	sudo sed -i "s/order hosts,bind/order bind,hosts/" /etc/host.conf

	# create admin group
	sudo groupadd admin

	# Add current user to admin group
	sudo usermod -a -G admin $currentuser

	# Block root access to ssh and limit access to admin group
	sudo sed -i "s/PermitRootLogin prohibit-password/PermitRootLogin no/" /etc/ssh/sshd_config
	sudo sed -i "/PermitRootLogin no/ a DebianBanner no" /etc/ssh/sshd_config
	sudo sed -i "/DebianBanner no/ a AllowGroups admin" /etc/ssh/sshd_config

	# override setting so admin is default root group
	sudo dpkg-statoverride --update --add root admin 4750 /bin/su

	# rebuild kernel images with new information
	sudo update-initramfs -c -k all

	# update boot menu with new images
	sudo update-grub

	return
}


# Function to install and configure Fail2Ban, Tripwire, etc
installSecurity()
{
	echo " "
	echo "############ Installing additional security software ############"
	echo "#################################################################"
	echo " "

    # install apps
    sudo apt-get install -y rkhunter chkrootkit

    # set chkrootkit to scan daily
	sudo sed -i 's/RUN_DAILY="false"/RUN_DAILY="true"/' /etc/chkrootkit.conf
	
	# set rkhunter to update and scan daily, as well as scan new installs to add to internal database
	sudo sed -i 's/APT_AUTOGEN="false"/APT_AUTOGEN="true"/' /etc/default/rkhunter
	sudo sed -i 's/CRON_DAILY_RUN=""/CRON_DAILY_RUN="true"/' /etc/default/rkhunter
	sudo sed -i 's/CRON_DB_UPDATE=""/CRON_DB_UPDATE="true"/' /etc/default/rkhunter
	
	# remove common false positive from database and fix misconfig
	sudo sed -i 's|#ALLOWHIDDENDIR=/etc/.java|ALLOWHIDDENDIR=/etc/.java|' /etc/rkhunter.conf
	sudo sed -i 's|#ALLOWHIDDENDIR=/etc/.git|ALLOWHIDDENDIR=/etc/.git|' /etc/rkhunter.conf
	sudo sed -i 's|#ALLOWHIDDENDIR=/dev/.lxc|ALLOWHIDDENDIR=/dev/.lxc|' /etc/rkhunter.conf
	sudo sed -i 's|MIRRORS_MODE=1|MIRRORS_MODE=0|' /etc/rkhunter.conf
	sudo sed -i 's|UPDATE_MIRRORS=0|UPDATE_MIRRORS=1|' /etc/rkhunter.conf
	sudo sed -i 's|WEB_CMD="/bin/false"|WEB_CMD=""|' /etc/rkhunter.conf

	# allow local network clients to attempt logins and fail without being immediately banned
	sudo sed -i -e "\$aALL: $subnetip\/$subnetmask" /etc/hosts.allow

	# update fkhunter database
	sudo rkhunter --update
	wait

	# update rkhunter based on new info
	sudo rkhunter --propupd
	wait

	# run rkhunter in non-interactive mode
	sudo rkhunter --check --rwo
	wait

	return
}


# Function to enable automatic security updates only
AutoSecurityUpdates()
{
	sudo apt-get install -y unattended-upgrades

	# Configure allowed automatic update sources - security only
	sudo sed -i 's|"${distro_id}:${distro_codename}";|//"${distro_id}:${distro_codename}";|' /etc/apt/apt.conf.d/50unattended-upgrades
	sudo sed -i 's|//Unattended-Upgrade::Mail "";|Unattended-Upgrade::Mail "root";|' /etc/apt/apt.conf.d/50unattended-upgrades
	sudo sed -i 's|//Unattended-Upgrade::Remove-Unused-Dependencies "false";|Unattended-Upgrade::Remove-Unused-Dependencies "true";|' /etc/apt/apt.conf.d/50unattended-upgrades
	sudo sed -i 's|// Unattended-Upgrade::OnlyOnACPower "true";|Unattended-Upgrade::OnlyOnACPower "true";|' /etc/apt/apt.conf.d/50unattended-upgrades
	
	# enable automatic updates
	sudo truncate -s 0 /etc/apt/apt.conf.d/20auto-upgrades
	sudo chmod 777 /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf 'APT::Periodic::Update-Package-Lists "1";' >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf "\n" >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf 'APT::Periodic::Download-Upgradeable-Packages "1";' >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf "\n" >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf 'APT::Periodic::AutocleanInterval "3";' >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf "\n" >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo printf 'APT::Periodic::Unattended-Upgrade "1";' >> /etc/apt/apt.conf.d/20auto-upgrades
	sudo chmod 644 /etc/apt/apt.conf.d/20auto-upgrades
	
	# enable reboot check and email notification
	sudo echo '#!/usr/bin/env bash' | sudo tee /etc/cron.hourly/reboot-check
	sudo chmod 777 /etc/cron.hourly/reboot-check
	sudo printf "\n\n" >> /etc/cron.hourly/reboot-check
	sudo printf 'if [ -f /var/run/reboot-required ]; then' >> /etc/cron.hourly/reboot-check
	sudo printf "\n\t" >> /etc/cron.hourly/reboot-check
	sudo printf 'echo "A reboot is required following updates to server $(hostname -f)" | mail -s "Reboot Required" admin-email' >> /etc/cron.hourly/reboot-check
	sudo printf "\nfi" >> /etc/cron.hourly/reboot-check

	sudo sed -i "s/admin-email/$smtplogin/" /etc/cron.hourly/reboot-check

	sudo chown root:root /etc/cron.hourly/reboot-check
	sudo chmod 755 /etc/cron.hourly/reboot-check
	
	return
}