########################
#  Input verification  #
########################

# Translate user input to all lower case to prevent ID10T errors
translateToLowerCase()
{
	local lowercase=""
	lowercase="$(echo $1 | tr '[:upper:]' '[:lower:]')"
	echo "$lowercase"
}


####################
#  Misc Functions  #
####################

# Set output colors
setColors()
{
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    RED='\033[0;31m'
    NC='\033[0m'
}

# Check for new script version
checkScriptVer()
{
    TMP_FILE=$(mktemp -p "" "rmminstall_XXXXXXXXXX")
    curl -s -L "${SCRIPT_URL}" > ${TMP_FILE}
    NEW_VER=$(grep "^SCRIPT_VERSION" "$TMP_FILE" | awk -F'[="]' '{print $3}')

    if [ "${SCRIPT_VERSION}" -ne "${NEW_VER}" ]; then
        printf >&2 "${YELLOW}Old install script detected, downloading and replacing with the latest version...${NC}\n"
        wget -q "${SCRIPT_URL}" -O install.sh
        printf >&2 "${YELLOW}Script updated! Please re-run ./install.sh${NC}\n"
        rm -f $TMP_FILE
        exit 1
    fi

    rm -f $TMP_FILE
}

# Check for root as user
checkRoot()
{
    if [ $EUID -eq 0 ]; then
        echo -e "${RED}Do NOT run this script as root. Exiting.${NC}"
        exit 1
    fi
}


###########################
#  System info functions  #
###########################

# Gather OS info
getOSInfo()
{
    osname=$(lsb_release -si); osname=${osname^}
    osname=$(echo "$osname" | tr  '[A-Z]' '[a-z]')
    fullrel=$(lsb_release -sd)
    codename=$(lsb_release -sc)
    relno=$(lsb_release -sr | cut -d. -f1)
    fullrelno=$(lsb_release -sr)
}

# Check OS if not recognised
wutOSThis()
{
    if [ ! "$osname" = "ubuntu" ] && [ ! "$osname" = "debian" ]; then
        osname=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')
        osname=${osname^}
    fi
}

# Verify Debian or Ubuntu and version
verifySupportedOS()
{
    if ([ "$osname" = "ubuntu" ] && ([ "$fullrelno" = "20.04" ] || [ "$fullrelno" = "22.04" ])) || ([ "$osname" = "debian" ] && [ $relno -ge 10 ]); then
        echo $fullrel
    else
        echo $fullrel
        echo -e "${RED}Supported versions: Ubuntu 20.04 and 22.04, Debian 10 and 11.${NC}"
        echo -e "${RED}Your system does not appear to be supported.${NC}"
        exit 1
    fi
}

# Check language/locale
checkLocale()
{
    if [[ "$LANG" != *".UTF-8" ]]; then
        printf >&2 "\n${RED}System locale must be ${GREEN}<some language>.UTF-8${RED} not ${YELLOW}${LANG}${NC}\n"
        printf >&2 "${RED}Run the following command and change the default locale to your language of choice${NC}\n\n"
        printf >&2 "${GREEN}sudo dpkg-reconfigure locales${NC}\n\n"
        printf >&2 "${RED}You will need to log out and back in for changes to take effect, then re-run this script.${NC}\n\n"
        exit 1
    fi
}

#######################
#  Install Functions  #
#######################

# Install script prereqs
installPreReqs()
{
    sudo apt update && sudo apt install -y curl wget dirmngr gnupg lsb-release
}

# Install remaining prereqs
installAdditionalPreReqs()
{
    sudo apt install -y software-properties-common openssl ca-certificates apt-transport-https gcc g++ make build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev libbz2-dev git
}

