###################
#  CFG file info  #
###################

CFG_VERSION="5"


###########################
#  Certificate Functions  #
###########################

# Renew Certs
renewCerts()
{
    rmmdomain=$(grep server_name /etc/nginx/sites-available/rmm.conf | grep -v 301 | head -1 | tr -d " \t" | sed 's/.*server_name//' | tr -d ';')
    local temprootdomain="$(echo $rmmdomain | awk -F. '{print $2}')"
    local tempdotsomething="$(echo $rmmdomain | awk -F. '{print $3}')"
    rootdomain="$temprootdomain.$tempdotsomething"
    generateCerts;
    sudo systemctl restart nginx.service rmm.service celery celerybeat.service nats-api.service nats.service meshcentral.service
}

# Import certs
importCerts()
{
    dialog --cr-wrap --backtitle "Tactical RMM Installation and Maintenance Utility" --title "Importing Certificates" --msgbox "A VIM window will open for you to paste the contents of your SSL certificate and your private key, in that order.\n\nTo paste the contents, type i , then right click in the window.\n\nAfter pasting the contents, type esc , then shift-: , then x , then enter to close the window and continue.\n\nPress enter when you're ready to begin:" 0 0
    sudo vim /etc/ssl/certs/fullchain.pem
    sudo vim /etc/ssl/private/privkey.pem
}

# Generate certs
generateCerts()
{
    print_green 'Getting wildcard cert'
    
    ### Get initial DNS text entry
    sudo certbot certonly --manual -d *.${rootdomain} --agree-tos --no-bootstrap --preferred-challenges dns -m ${letsemail} --no-eff-email
    
    ### Keep going until successful cert issue after adding DNS txt entry
    while [[ $? -ne 0 ]]; do
        sudo certbot certonly --manual -d *.${rootdomain} --agree-tos --no-bootstrap --preferred-challenges dns -m ${letsemail} --no-eff-email
    done
}

# Install Certbot and get initial certs
installCertbot()
{
    ### Install Certbot
    sudo apt install -y certbot
    if [ "$1" == "restore" ]; then
        return
    fi

    if [ "$INSTALL_TYPE" == "devinstall" ]; then
        echo -e "${GREEN}Certificates should be in place${NC}"
    else
        dialog --cr-wrap --clear --yes-label "LetsEncrypt" --no-label "Import" --backtitle "Tactical RMM Installation and Maintenance Utility" --title "Certificate Generation" --yesno "Would you like to have wildcard certificates generated using LetsEncrypt, or import your own existing certificates?" 0 0
        case $? in
            ### Get wildcard cert via LetsEncrypt
            0 ) generateCerts;;

            1 ) importCerts;;
        esac
    fi
    
    ### Set symlinks to avoid security concerns and simplify Nginx config
    sudo ln -s /etc/letsencrypt/live/${rootdomain}/fullchain.pem /etc/ssl/certs/fullchain.pem
	sudo ln -s /etc/letsencrypt/live/${rootdomain}/privkey.pem /etc/ssl/private/privkey.pem

    ### Generate DH
    if [ ! -f /etc/ssl/certs/dhparam.pem ]; then
        sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
    else
        return
    fi
}