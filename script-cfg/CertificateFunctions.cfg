###################
#  CFG file info  #
###################

CFG_VERSION="8"


###########################
#  Certificate Functions  #
###########################


# Check that acme challenge dns entry exists
acmeChallengeCheck()
{
    local acmegood="n"

    until [ "$acmegood" == "y" ]; do
        if [[ $(dig +noall +answer -t TXT _acme-challenge.$1) ]] 2>/dev/null; then
            acmegood="y"
            echo -e "${GREEN} Acme Challenge TXT record available.${NC}\n"
            echo -e "${GREEN} Continuing...${NC}"
        else
            echo -e "${YELLOW} Acme Challenge TXT record not available yet.${NC}\n"
            echo -e "${YELLOW} Trying again in 30 sec...${NC}\n"
            acmegood="n"
            sleep 30
        fi
    done
}

# Renew Certs
renewCerts()
{
    # generate certs and restart services
    generateCerts;
    sudo systemctl restart nginx.service rmm.service celery celerybeat.service nats-api.service nats.service meshcentral.service
}

# Import certs
importCerts()
{
    dialog --cr-wrap --backtitle "Tactical RMM Installation and Maintenance Utility" --title "Importing Certificates" --msgbox "A VIM window will open for you to paste the contents of your SSL certificate, private key, and CA Chain file, in that order.\n\nTo paste the contents, type i , then shift+insert.\n\nAfter pasting the contents, type esc , then shift-: , then wq , then enter to close the window and continue.\n\nPress enter when you're ready to begin:" 0 0
    if [ ! -d "/etc/letsencrypt/live/${rootdomain}" ]; then
        sudo mkdir -p /etc/letsencrypt/live/${rootdomain}
    fi

    if [ -f /etc/letsencrypt/live/${rootdomain}/fullchain.pem ]; then
        sudo truncate -s 0 /etc/letsencrypt/live/${rootdomain}/fullchain.pem
    fi
    sudo vim /etc/letsencrypt/live/${rootdomain}/fullchain.pem

    if [ -f /etc/letsencrypt/live/${rootdomain}/privkey.pem ]; then
        sudo truncate -s 0 /etc/letsencrypt/live/${rootdomain}/privkey.pem
    fi
    sudo vim /etc/letsencrypt/live/${rootdomain}/privkey.pem

    if [ -f /etc/letsencrypt/live/${rootdomain}/chain.pem ]; then
        sudo truncate -s 0 /etc/letsencrypt/live/${rootdomain}/chain.pem
    fi
    sudo vim /etc/letsencrypt/live/${rootdomain}/chain.pem
    
    sudo chown ${USER}:${USER} -R /etc/letsencrypt
    sudo chmod 775 -R /etc/letsencrypt
}

# Generate certs
generateCerts()
{
    echo -e "${GREEN} Getting wildcard cert${NC}"
    
    # Get initial DNS text entry
    sudo certbot certonly --manual -d *.${rootdomain} --agree-tos --no-bootstrap --preferred-challenges dns -m ${letsemail} --no-eff-email
    
    # Ensure TXT record has populated
    acmeChallengeCheck "$rootdomain";
    
    # Keep going until successful cert issue after adding DNS txt entry
    while [[ $? -ne 0 ]]; do
        sudo certbot certonly --manual -d *.${rootdomain} --agree-tos --no-bootstrap --preferred-challenges dns -m ${letsemail} --no-eff-email
    done
}

# Install Certbot and get initial certs
installCertbot()
{
    # Install Certbot
    sudo apt install -y certbot
    if [ "$1" == "restore" ]; then
        return
    fi

    if [ "$1" == "devinstall" ]; then
        echo -e "${GREEN} Certificates should be in place${NC}\n"
    elif [ "$autoinstall" != "1" ]; then
        dialog --cr-wrap --clear --yes-label "LetsEncrypt" --no-label "Import" --backtitle "Tactical RMM Installation and Maintenance Utility" --title "Certificate Generation" --yesno "Would you like to have wildcard certificates generated using LetsEncrypt, or import your own existing certificates?" 0 0
        case $? in
            # Get wildcard cert via LetsEncrypt
            0 ) generateCerts;;
            # Import certs using vim
            1 ) importCerts;;
        esac
    elif [ "$autoinstall" == "1" ]; then
        if [ ! -d "/etc/letsencrypt/live/${rootdomain}" ]; then
            sudo mkdir -p /etc/letsencrypt/live/${rootdomain}
        fi
        sudo cp "$sslcert" /etc/letsencrypt/live/${rootdomain}/fullchain.pem
        sudo cp "$sslkey" /etc/letsencrypt/live/${rootdomain}/privkey.pem
        sudo cp "$sslcacert" /etc/letsencrypt/live/${rootdomain}/chain.pem
        sudo chown ${USER}:${USER} -R /etc/letsencrypt
        sudo chmod 775 -R /etc/letsencrypt
    fi

    # Generate DH if it doesn't exist
    if [ ! -f /etc/ssl/certs/dhparam.pem ]; then
        sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
    else
        return
    fi
}